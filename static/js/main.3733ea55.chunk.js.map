{"version":3,"sources":["components/CreatePosts.js","components/Users.js","components/Replay.js","components/SelectUserForReplay.js","components/Comment.js","components/SelectUserForComment.js","components/Post.js","components/Posts.js","App.js","serviceWorker.js","index.js"],"names":["CreatePosts","props","useState","Id","setId","message","setMessage","className","onChange","event","parseInt","target","value","users","map","ele","index","userId","key","userName","src","filter","Avatar","placeholder","type","onClick","createPost","Users","setUser","setAvatar","name","e","createUser","Replay","replay","replayMessage","time","result","Date","getTime","console","log","toLocaleDateString","toLocaleTimeString","timeFun","SelectUserForReplay","replayUserId","setReplayUserId","setReplayMessage","i","uId","ReplayMessage","createReplay","x","y","Comment","comment","commentMessage","setCommentLikeCount","commentLikeCount","changeReplayStatus","replayStauts","j","SelectUserForComment","setCommentMessage","createComment","submit","clickcode","Post","post","setLikeCount","likeCount","commentStauts","changeCommentStatus","postId","element","Posts","selecedUserId","posts","App","setUsers","commentId","setPosts","id","newUser","length","newPost","newReplay","newPosts","push","allNewPosts","forEach","sort","a","b","newComment","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3733ea55.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction CreatePosts (props) {\n  const [Id, setId] = useState('');\n  const [message, setMessage] = useState('');\n\n  const getUserId = (event) => {\n    setId(parseInt(event.target.value));\n  }\n\n  const handleChange = (event) => {\n    const message = event.target.value;\n    setMessage(message);\n  }\n  const submit = () => {\n    props.createPost(Id, message)\n  }\n\n  return (\n    <div className=\"createPosts\">\n      \n      <p>Create post</p>\n      <div className=\"userInfo\">\n        <select onChange = {getUserId}>\n            <option value=\"\">Choose User</option>\n            {props.users.map((ele, index) => <option value = {ele.userId} key = {index}>{ele.userName}</option>)};\n        </select>\n\n        \n          <img src = {Id === '' ? \"http://placekitten.com/300/300\" : props.users.filter(ele => ele.userId === Id)[0].Avatar} />\n          <input placeholder = \"What's in your mind?\" type = 'text' value = {message} onChange = {handleChange}/>\n        \n        <button onClick = {submit}>Post</button>\n      </div>\n\n    </div>\n    \n  )\n}\n\nexport default CreatePosts;\n\n","import React, { useState } from 'react';\n\nfunction Users (props) {\n  const [userName, setUser] = useState('');\n  const [Avatar, setAvatar] = useState('');\n\n  const handleChangeUser = (e) => {\n    setUser(e.target.value);   \n  } \n  const handleChangeAvatar = (e) => {\n    setAvatar(e.target.value); \n  } \n\n  const submit = (e) => {\n    props.createUser(userName, Avatar)\n    setAvatar('');\n    setUser('');\n  }\n\n  return (\n    <div className = \"createUser\">\n      <input name = 'userName' value = {userName} onChange = {handleChangeUser} type = 'text' placeholder = 'username'/>\n      <input name = 'Avatar' value = {Avatar} onChange = {handleChangeAvatar} type = 'text' placeholder = 'userImageLink'/>\n      <button onClick = {submit}>Sign in</ button>\n    </div>\n  )\n}\n\nexport default Users;\n\n","import React, { useState } from 'react';\n\nfunction Replay (props) {\n\n  const timeFun = (time)=> {\n\n    let currentTime = new Date().getTime()\n    let result = currentTime - time;\n    console.log(result);\n    if (result/6000 > 1440 ) { \n      return (new Date(time).toLocaleDateString() + \"---\" + new Date(time).toLocaleTimeString())\n    } else if (result/6000 > 720 ) { \n      return 'yesterday'\n    } else if (result/6000 > 600) {\n      return '10h ago'\n    } else if (result/6000 > 300) {\n      return '5h ago'\n    } else if (result/6000 > 240) {\n      return '4h ago'\n    } else if (result/6000 > 180) {\n      return '3h ago'\n    } else if (result/6000 > 120) {\n      return '2h ago'\n    } else if (result/6000 > 60) {\n      return '1h ago'\n    } else if (result/6000 > 5) {\n      return '5m ago'\n    } else if (result/6000 > 0) {\n      return 'Just Now'\n    }\n\n  }\n\n  return (\n    <div className = 'replay'>\n      <img src = { (props.users.filter(ele => ele.userId === parseInt(props.replay.userId)))[0].Avatar }/>\n      <div>{ (props.users.filter(ele => ele.userId === parseInt(props.replay.userId)))[0].userName }·</div>\n      <p>{props.replay.replayMessage}·</p>\n      <div>{timeFun(props.replay.time)}</div>\n    </div>\n  )\n}\nexport default Replay;\n","import React, { useState } from 'react';\n\nfunction SelectUserForReplay (props) {\n  const [replayUserId, setReplayUserId] = useState('');\n  const [replayMessage, setReplayMessage]= useState('');\n\n  const getReplayUserId = (event) => {\n    setReplayUserId(event.target.value);\n  }\n\n  const replay = (index, i) => {\n    const uId = replayUserId;\n    const ReplayMessage =  replayMessage;\n    console.log(uId,ReplayMessage,i,index);\n    props.createReplay(uId,ReplayMessage,index, i);\n    setReplayMessage('');\n  }\n\n  const handleReplayChange = (e) => {\n    setReplayMessage(e.target.value);\n  } \n\n\n  return (\n    <div className = 'createReplay'>\n      <select onChange = {getReplayUserId}>\n        <option value=\"\">Choose User</option>\n        {props.users.map((ele, i) => <option value = {ele.userId} key = {i}>{ele.userName}</option>)};\n      </select>\n      <img src = {replayUserId === \"\" ? \"http://placekitten.com/300/300\" : props.users.filter(ele => ele.userId === parseInt(replayUserId))[0].Avatar}/>\n      <input type = 'text' value ={replayMessage} onChange = {handleReplayChange}/>\n      <button onClick = {() => {replay(props.x, props.y)}}>submitReplay</button>\n    </div>\n  )\n}\nexport default SelectUserForReplay;\n\n","import React, { useState } from 'react';\nimport Replay from './Replay.js'\nimport SelectUserForReplay from './SelectUserForReplay.js'\n\nfunction Comment (props) {\n\n  const timeFun = (time)=> {\n\n    let currentTime = new Date().getTime()\n    let result = currentTime - time;\n    console.log(result);\n    if (result/6000 > 1440 ) { \n      return (new Date(time).toLocaleDateString() + \"---\" + new Date(time).toLocaleTimeString())\n    } else if (result/6000 > 720 ) { \n      return 'yesterday'\n    } else if (result/6000 > 600) {\n      return '10h ago'\n    } else if (result/6000 > 300) {\n      return '5h ago'\n    } else if (result/6000 > 240) {\n      return '4h ago'\n    } else if (result/6000 > 180) {\n      return '3h ago'\n    } else if (result/6000 > 120) {\n      return '2h ago'\n    } else if (result/6000 > 60) {\n      return '1h ago'\n    } else if (result/6000 > 5) {\n      return '5m ago'\n    } else if (result/6000 > 0) {\n      return 'Just Now'\n    }\n\n  }\n\n  const handleReplay = (index,i)=> {\n    props.changeReplayStatus(index,i);\n  }\n\n  const handleCommentLikeCilck = (index,i) => {\n    props.setCommentLikeCount(index,i);\n  }\n  \n  return (\n    <div className = 'comment'>\n\n      <div className = 'commentInfo'>\n        <img src = { (props.users.filter(ele => ele.userId === parseInt(props.comment.userId)))[0].Avatar }/>\n        <p>{ (props.users.filter(ele => ele.userId === parseInt(props.comment.userId)))[0].userName }·</p>\n        <span>{props.comment.commentMessage}·</span><span>{timeFun(props.comment.time)}</span>\n      </div>\n\n      <button onClick = {()=>{handleCommentLikeCilck(props.x, props.y)}}>Like:{props.comment.commentLikeCount}</button>\n      <button onClick = {()=>{handleReplay(props.x, props.y)}}>replay</button>\n\n      {props.comment.replayStauts ? \n      <div className =\"selectUseAndReplay\">\n        <SelectUserForReplay \n          createReplay = {props.createReplay} \n          users = {props.users} \n          x = {props.x} \n          y = {props.y} \n          key = {props.y}/>\n        \n        <div className =\"replayContainer\">\n          {props.comment.replay.map((replay, j) => {\n            return <Replay users = {props.users} replay = {replay} key = {j}/>\n          })}\n        </div>\n      </div>\n      : null}\n    </div>\n  )\n\n  \n}\nexport default Comment;\n\n","import React, { useState } from 'react';\n\nfunction SelectUserForComment (props) {\n  const [Id, setId] = useState('');\n  const [commentMessage, setCommentMessage]= useState('');\n\n  const handleChange = (e) => {\n    setCommentMessage(e.target.value);\n  } \n\n  const getUserId = (event) => {\n    setId(event.target.value);\n  }\n\n  const submit = (index) => {\n    const uId = Id;\n    const message = commentMessage;\n    props.createComment(uId, message, index);\n    setCommentMessage('');\n  }\n\n  return (\n    <div className = 'createComment'>\n      <select onChange = {getUserId}>\n        <option value=\"\">Choose User</option>\n        {props.users.map((ele, i) => <option value = {ele.userId} key = {i}>{ele.userName}</option>)};\n      </select>\n      <img src = {Id === \"\" ? \"http://placekitten.com/300/300\" : props.users.filter(ele => ele.userId === parseInt(Id))[0].Avatar}/>\n      <input placeholder = \"Write a comment...\" type = 'text' value ={commentMessage} onChange = {handleChange}/>\n      <button onClick = {() => {submit(props.clickcode)}}>comment</button>\n    </div>\n  )\n}\nexport default SelectUserForComment;\n\n","import React, { useState } from 'react';\nimport Comment from './Comment.js'\nimport SelectUserForComment from './SelectUserForComment'\n\nfunction Post (props) {\n\n  const handlePostLikeCilck = (index) => {\n    props.setLikeCount(index);\n  }\n\n  const timeFun = (time)=> {\n\n    let currentTime = new Date().getTime()\n    let result = currentTime - time;\n    console.log(result);\n    if (result/6000 > 1440 ) { \n      return (new Date(time).toLocaleDateString() + \"---\" + new Date(time).toLocaleTimeString())\n    } else if (result/6000 > 720 ) { \n      return 'yesterday'\n    } else if (result/6000 > 600) {\n      return '10h ago'\n    } else if (result/6000 > 300) {\n      return '5h ago'\n    } else if (result/6000 > 240) {\n      return '4h ago'\n    } else if (result/6000 > 180) {\n      return '3h ago'\n    } else if (result/6000 > 120) {\n      return '2h ago'\n    } else if (result/6000 > 60) {\n      return '1h ago'\n    } else if (result/6000 > 5) {\n      return '5m ago'\n    } else if (result/6000 > 0) {\n      return 'Just Now'\n    }\n\n  }\n\n  const handleComment = (index) => {\n    props.changeCommentStatus(index);\n  }\n\n  return (\n    <div className = 'post'> \n      <div className = 'postCotent'>\n        <div className = 'user'>\n            <img src = { (props.users.filter(ele => ele.userId === parseInt(props.post.userId)))[0].Avatar }/> \n            <div> \n              <div>{ (props.users.filter(ele => ele.userId === parseInt(props.post.userId)))[0].userName }</div>\n              <div>{timeFun(props.post.time)}</div>\n            </div>\n          </div>\n          <p className = 'postMessage'>{props.post.message}</p>\n      </div>\n      \n      <div className = 'likeAndComment'>\n        <button  onClick = {()=>{handlePostLikeCilck(props.index)}}>Like:{props.post.likeCount}</button>\n        <button name = {props.post.userId} value = {props.post.commentStauts} onClick = {()=>{handleComment(props.index)}}>Comment</button>\n      </div>\n      \n      {props.post.commentStauts ? \n      <div className =\"selectUseAndComment\">\n        <SelectUserForComment \n          createComment = {props.createComment} \n          clickcode = {props.post.postId} \n          users = {props.users} \n          key = {props.index}/>\n        {\n          props.post.comment.map((element,i) => {\n            return <Comment \n              setCommentLikeCount = {props.setCommentLikeCount}\n              changeReplayStatus = {props.changeReplayStatus} \n              y = {i}  \n              x = {props.index} \n              createReplay = {props.createReplay} \n              users = {props.users} \n              comment = {element} \n              key = {i}/>\n          })\n        }\n      </div>\n       : null\n      }\n    </div>\n  )\n}\n\nexport default Post;\n\n","import React, { useState } from 'react';\nimport Post from './Post.js'\n\nfunction Posts (props) {\n\n  if (!props.selecedUserId) {\n    return (\n      props.posts.map((post, index) => {\n        return <Post \n          createComment = {props.createComment}\n          createReplay = {props.createReplay}\n          setLikeCount = {props.setLikeCount} \n          setCommentLikeCount = {props.setCommentLikeCount}\n          changeCommentStatus = {props.changeCommentStatus} \n          changeReplayStatus = {props.changeReplayStatus}\n          users = {props.users} \n          index = {index} \n          key = {index} \n          post = {post}/>\n      }) \n    )\n  } else {\n    return (\n    props.posts.map((post, index) => {\n      if (post.userId === parseInt(props.selecedUserId)){\n        return <Post \n          createComment = {props.createComment}\n          createReplay = {props.createReplay}\n          setLikeCount = {props.setLikeCount} \n          setCommentLikeCount = {props.setCommentLikeCount}\n          changeCommentStatus = {props.changeCommentStatus}\n          changeReplayStatus = {props.changeReplayStatus} \n          users = {props.users} \n          index = {index} \n          key = {index} \n          post = {post}/>\n      }\n      })\n    \n  )}\n}\nexport default Posts;\n\n","import React, { useState } from 'react';\nimport './App.css';\nimport CreatePosts from './components/CreatePosts.js'\nimport Users from './components/Users.js'\nimport Posts from './components/Posts.js'\n\nfunction App() {\n\n  const [users, setUsers] = useState([\n    {\n      userId : 0,\n      userName : 'Jams',\n      Avatar: 'http://placekitten.com/101/100',\n    },\n    {\n      userId : 1,\n      userName : 'Dragon',\n      Avatar: 'http://placekitten.com/100/101',\n    },\n    {\n      userId : 2,\n      userName : 'Jess',\n      Avatar: 'http://placekitten.com/99/100',\n    }\n  ])\n\n\n\n  const [posts, setPosts] = useState([\n    {\n      userId : 0,\n      postId: 0,\n      message : 'Tesla modleXTesla modleXTesla modleXTesla modleXTesla modleXTesla modleXTesla modleXTesla modleXTesla modleXTesla modleX',\n      time : 1580435627922,\n      likeCount: 0,\n      commentStauts: false,\n      comment : [{\n        time : 1580436627922,\n        userId : 0,\n        commentId : 0,\n        commentMessage :'你的头像很好看',\n        commentLikeCount : 0,\n        replayStauts: false,\n        replay: [\n          {\n            userId : 0,\n            time : 1580437627922,\n            replayMessage: \"是的很好看\",\n            likeCount: 0,\n          },\n          {\n            userId : 0,\n            time : 1580438627922,\n            replayMessage: \"很好看很好\",\n            likeCount: 0,\n          },\n        ]\n      },\n      {\n        time : 1580435527922,\n        userId : 1,\n        commentId : 1,\n        commentMessage :'世界',\n        commentLikeCount : 0,\n        replayStauts: false,\n        replay: [\n          {\n            userId : 0,\n            time : 1580438627922,\n            replayMessage: \"是的很好看\",\n            likeCount: 0,\n          },\n          {\n            userId : 0,\n            time : 1580438627922,\n            replayMessage: \"很好看很好\",\n            likeCount: 0,\n          },\n        ]\n      },\n      {\n        time : 1580438627922,\n        userId : 2,\n        commentId : 2,\n        commentMessage :'我是休闲鞋',\n        commentLikeCount : 0,\n        replayStauts: false,\n        replay: [\n          {\n            userId : 0,\n            time : 1580438627922,\n            replayMessage: \"是的很好看\",\n            likeCount: 0,\n          },\n          {\n            userId : 0,\n            time : 1580438627922,\n            replayMessage: \"很好看很好\",\n            likeCount: 0,\n          },\n        ]\n      }\n      ]\n    },\n\n\n    {\n      userId : 1,\n      postId: 1,\n      message : 'Tesla modleY',\n      time : 1580438627922,\n      likeCount: 0,\n      commentStauts: false,\n      comment : [{\n        time : '12:10',\n        userId : 0,\n        commentId : 0,\n        commentMessage :'你的头像很好看',\n        commentLikeCount : 0,\n        replayStauts: false,\n        replay: [\n          {\n            userId : 0,\n            time : 1580438627922,\n            replayMessage: \"是的很好看\",\n            likeCount: 0,\n          },\n          {\n            userId : 0,\n            time : 1580438627922,\n            replayMessage: \"很好看很好\",\n            likeCount: 0,\n          },\n        ]\n      },\n      {\n        time : 1580438627922,\n        userId : 1,\n        commentId : 1,\n        commentMessage :'世界',\n        commentLikeCount : 0,\n        replayStauts: false,\n        replay: [\n          {\n            userId : 0,\n            time : 1580438627922,\n            replayMessage: \"是的很好看\",\n            likeCount: 0,\n          },\n          {\n            userId : 0,\n            time : 1580438627922,\n            replayMessage: \"很好看很好\",\n            likeCount: 0,\n          },\n        ]\n        \n      },\n      {\n        time : 1580438627922,\n        userId : 2,\n        commentId : 2,\n        commentMessage :'我是休闲鞋',\n        commentLikeCount : 0,\n        replayStauts: false,\n        replay: [\n          {\n            userId : 0,\n            time : 1580438627922,\n            replayMessage: \"是的很好看\",\n            likeCount: 0,\n          },\n          {\n            userId : 0,\n            time : 1580438627922,\n            replayMessage: \"很好看很好\",\n            likeCount: 0,\n          },\n        ]\n      }\n      ]\n    },\n\n\n    {\n      userId : 2,\n      postId: 3,\n      message : 'Tesla modleW',\n      time : 1540433627922,\n      likeCount: 0,\n      commentStauts: false,\n      comment : [{\n        time : 1580438627922,\n        userId : 0,\n        commentId : 0,\n        commentMessage :'你的头像很好看',\n        commentLikeCount : 0,\n        replayStauts: false,\n        replay: [\n          {\n            userId : 0,\n            time : 1580438627922,\n            replayMessage: \"是的很好看\",\n            likeCount: 0,\n          },\n          {\n            userId : 0,\n            time : 1580438627922,\n            replayMessage: \"很好看很好\",\n            likeCount: 0,\n          },\n        ]\n      },\n      {\n        time : 1580438627922,\n        userId : 1,\n        commentId : 1,\n        commentMessage :'世界',\n        commentLikeCount : 0,\n        replayStauts: false,\n        replay: [\n          {\n            userId : 0,\n            time : 1580438627922,\n            replayMessage: \"是的很好看\",\n            likeCount: 0,\n          },\n          {\n            userId : 0,\n            time : 1580438627922,\n            replayMessage: \"很好看很好\",\n            likeCount: 0,\n          },\n        ]\n        \n      },\n      {\n        time : 1580438627922,\n        userId : 2,\n        commentId : 2,\n        commentMessage :'我是休闲鞋',\n        commentLikeCount : 0,\n        replayStauts: false,\n        replay: [\n          {\n            userId : 0,\n            time : 1580438627922,\n            replayMessage: \"是的很好看\",\n            likeCount: 0,\n          },\n          {\n            userId : 0,\n            time : 1580438627922,\n            replayMessage: \"很好看很好\",\n            likeCount: 0,\n          },\n        ]\n      }\n      ]\n    },\n\n  ])\n\n  const createUser = (userName, Avatar) => {\n    const newUser = {\n      userId : users.length,\n      userName : userName,\n      Avatar : Avatar\n    };\n    setUsers([...users, newUser])\n  }\n\n  const createPost = (Id, message) => {\n    const newPost = {  \n      userId : Id,\n      postId : posts.length,\n      message : message,\n      time : new Date().getTime(),\n      likeCount: 0,\n      commentStauts: false,\n      comment : []\n    }\n    setPosts([newPost, ...posts])\n  }\n\n  const createReplay = (Id, replayMessage, index , i) => {\n    const newReplay = {\n      userId : Id,\n      time : new Date().getTime(),\n      replayMessage: replayMessage,\n      likeCount: 0,\n    }\n\n    const newPosts = posts.map((ele, x) => { \n      if (x === index) {\n        ele.comment.map((comment,j)=>{\n          if (j === i ){\n            comment.replay.push(newReplay);\n          }\n          return comment;\n        }) \n      }\n      return ele;\n    });\n    setPosts(newPosts); \n  }\n\n\n\n  const createComment = (id, message,index) => {\n    const newComment = {\n      time : new Date().getTime(),\n      userId : id,\n      commentId : posts[index].comment.length,\n      commentMessage : message,\n      commentLikeCount : 0,\n      replayStauts: false,\n      replay:[]\n    }\n\n    const newPosts = posts.map((ele, i) => { \n      if (i === index) {\n      ele.comment.push(newComment);\n      }\n    return ele;\n    });\n    setPosts(newPosts);  \n  }\n\n  const setLikeCount = (index) => {\n    const allNewPosts = posts.map((ele, i) => { \n      if (i === index) {\n        ele.likeCount++;\n      }\n      return ele;\n    });\n    setPosts(allNewPosts)\n  }\n\n  const setCommentLikeCount = (index,x) => {\n    const allNewPosts = posts.map((ele,i) => {//post\n      if (i===index) {\n        ele.comment.forEach((element, j) => { //comment\n          if (j === x) {\n            element.commentLikeCount++;\n          }\n        });\n      }\n      ele.comment.sort((a,b)=>b.commentLikeCount-a.commentLikeCount)\n      return ele;\n    })\n    setPosts(allNewPosts);\n  }\n  \n\n  const [id, setId] = useState('')\n\n  const getUserId = (e) => {\n    console.log(e.target.value);\n    setId(e.target.value) \n  }\n\n  const changeCommentStatus = (index) => {\n    const allNewPosts = posts.map((element, i) => {\n      if (index === i) {\n        if (element.commentStauts) {\n          element.commentStauts = false;\n        } else {\n          element.commentStauts = true;\n        }\n      } \n      return element;\n    })\n    setPosts(allNewPosts);\n  }\n\n  // Replay\n  const changeReplayStatus = (index,x) => {\n    const allNewPosts = posts.map((ele,i) => {//post\n      if (i===index) {\n        ele.comment.map((element, j) => { //comment\n          if (x === j) {\n            if (element.replayStauts) {\n              element.replayStauts = false;\n            } else {\n              element.replayStauts = true;\n            }\n          } \n          return element;\n        });\n      }\n      return ele;\n    })\n    setPosts(allNewPosts);\n  }\n\n\n  return (\n    <div className=\"App\">\n      <Users users = {users} createUser = {createUser}/> \n      <CreatePosts createPost = {createPost} users = {users}/>\n      <select className = \"fliter\" onChange = {getUserId}>\n        <option value = ''>Filter By:</option>\n        {users.map((ele, index) => <option value = {ele.userId} key = {index} >{ele.userName}</option>\n        )}\n      </select>\n\n      <Posts\n        createReplay = {createReplay}\n        changeReplayStatus ={changeReplayStatus} \n        changeCommentStatus = {changeCommentStatus} \n        setCommentLikeCount = {setCommentLikeCount} \n        createComment = {createComment} \n        selecedUserId = {id} \n        setLikeCount = {setLikeCount} \n        users = {users} posts = {posts}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}